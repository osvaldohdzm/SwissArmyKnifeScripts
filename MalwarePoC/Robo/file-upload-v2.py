from http.server import BaseHTTPRequestHandler, HTTPServer
import os

class FileUploadHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length)

        # Nombre del archivo que recibimos desde la petición POST
        filename = "output.zip"

        # Ruta donde se guardará el archivo recibido (la carpeta raíz del servidor)
        save_path = os.path.join(os.getcwd(), filename)

        with open(save_path, 'wb') as f:
            f.write(post_data)

        self.send_response(200)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()
        response_message = 'Archivo recibido y guardado con éxito en el servidor.'
        self.wfile.write(response_message.encode())

    def do_GET(self):
        self.send_response(405)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()
        response_message = "estas bien sope de queso, buen intento"
        self.wfile.write(response_message.encode())

    def do_PUT(self):
        self.send_response(405)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()
        response_message = "estas bien sope de queso, buen intento"
        self.wfile.write(response_message.encode())

    def do_DELETE(self):
        self.send_response(405)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()
        response_message = "estas bien sope de queso, buen intento"
        self.wfile.write(response_message.encode())

if __name__ == '__main__':
    host = 'localhost'  # Puedes cambiar esto a la dirección pública de tu servidor si lo deseas
    port = 8000  # Cambia esto al puerto que desees utilizar

    server = HTTPServer((host, port), FileUploadHandler)
    print(f'Servidor en marcha en {host}:{port}')

    try:
        server.serve_forever()
    except KeyboardInterrupt:
        pass

    server.server_close()
    print('Servidor detenido.')
